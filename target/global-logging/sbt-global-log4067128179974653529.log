[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Red Hat, Inc. Java 1.8.0_302)
[debug] Load.defaultLoad until apply took 216.6033ms
[debug]           Load.loadUnit: plugins took 116.0597ms
[debug]           Load.loadUnit: defsScala took 0.5146ms
[debug] [Loading] Scanning directory C:\Users\Usuario\Documents\NutClimate\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Usuario\Documents\NutClimate\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.434 ms
[debug]               Load.resolveProject(nutclimate-build) took 72.6609ms
[debug]             Load.loadTransitive: finalizeProject(Project(id nutclimate-build, base: C:\Users\Usuario\Documents\NutClimate\project, plugins: List(<none>))) took 299.2163ms
[debug] [Loading] Done in C:\Users\Usuario\Documents\NutClimate\project, returning: (nutclimate-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 330.1604ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.299ms
[debug]         Load.loadUnit(file:/C:/Users/Usuario/Documents/NutClimate/project/, ...) took 454.8241ms
[debug]       Load.apply: load took 633.5538ms
[debug]       Load.apply: resolveProjects took 6.5324ms
[debug]       Load.apply: finalTransforms took 56.6806ms
[debug]       Load.apply: config.delegates took 9.4267ms
[debug]       Load.apply: Def.make(settings)... took 558.6531ms
[debug]       Load.apply: structureIndex took 138.2161ms
[debug]       Load.apply: mkStreams took 2.3432ms
[info] loading project definition from C:\Users\Usuario\Documents\NutClimate\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2441.8975ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Usuario\Documents\NutClimate
[debug]       Load.loadUnit: mkEval took 6.6245ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.512 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.5117ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Usuario\Documents\NutClimate, plugins: List(<none>))) took 6.0184ms
[debug] [Loading] Done in C:\Users\Usuario\Documents\NutClimate, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2564.2848ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.7201ms
[debug]   Load.loadUnit(file:/C:/Users/Usuario/Documents/NutClimate/, ...) took 5014.7291ms
[debug] Load.apply: load took 5075.627ms
[debug] Load.apply: resolveProjects took 0.1173ms
[debug] Load.apply: finalTransforms took 15.5724ms
[debug] Load.apply: config.delegates took 0.454ms
[debug] Load.apply: Def.make(settings)... took 165.0452ms
[debug] Load.apply: structureIndex took 39.2203ms
[debug] Load.apply: mkStreams took 0.0041ms
[info] set current project to NutClimate (in build file:/C:/Users/Usuario/Documents/NutClimate/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-0580edd9273e500bee91
[debug] Writing bsp connection file
[info] started sbt server
